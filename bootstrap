#!/usr/bin/env bash

set -e  # exit on errors

# function to check if required commands exist prior to bootstrap
require () {
  if [[ ! $(command -v "$1") ]]; then
    echo -e "bootstrapping requires ${1}, Install that and re-run"
    exit 1
  fi
}

optional_depends_on() {
  if [[ ! $(command -v "$1") ]]; then
    echo -e "missing optional dependency: ${1}"
  fi
}

require bash
require curl
require git
require printf
require nvim

# git aliases
mkdir -p "${HOME}/.local/share"
curl -s 'https://raw.githubusercontent.com/seanbreckenridge/dotfiles/master/.config/zsh/aliases/git_aliases' > "${HOME}/.local/share/git_aliases"

printf "Checking shell...\n"
# check that were using bash
if ! echo "$SHELL" | grep -q bash; then
  printf "Expected to be using bash, found %s\n" "$SHELL"
  printf "Changing shell to bash...\n"
  sudo chsh -s "$(command -v bash)"
fi

# shorthand for the bashrc file
brc="${HOME}/.bashrc"
bext="${HOME}/.bootstraprc"

# create bashrc if it doesnt exist
[[ ! -f "$brc" ]] && touch "$brc"

printf "Creating extension bashrc file at %s\n" "$bext"
cat << EOF > "$bext"
export EDITOR=nvim
export TERM=xterm-256color
export LANG='en_US.UTF-8'
export PS1="[\u@\h \w ] $ "
export HISTTIMEFORMAT="%s "
export HISTFILESIZE=-1
export HISTSIZE=-1
shopt -s histappend  # dont overwrite history
shopt -s cmdhist   # save al-lines of multi-line commands in the same entry
shopt -s lithist  # embedded newlines for multi-line commands

alias ls='ls -h --color=tty'
alias ll='ls -l'
alias la='la -a'
alias l.='ls -a'

alias du='du -h'
alias df='df -h'

R() {
  if command -v ranger >/dev/null; then
    ranger
  else
    python3 -m pip install ranger-fm && ranger
  fi
}

[[ -f "${HOME}/.local/share/git_aliases" ]] && . ~/.local/share/git_aliases

alias path='echo \$PATH | tr ":" "\n"'
alias e='nvim'
alias en='nvim'

if [ -d ~/.local/plugged ]; then
    source ~/.local/plugged/fzf/shell/key-bindings.bash
    source ~/.local/plugged/fzf/shell/completion.bash
fi
[[ -f "${HOME}/.bash_ext" ]] && . "${HOME}/.bash_ext"
EOF

cat << EOF > "$HOME/.bash_profile"
# edit ~/.bash_ext instead of this file
source ~/.bashrc
EOF

touch ~/.bash_ext

# add source for bash extensions to bashrc
[ "$(grep -c "bootstraprc" "$brc")" = "0" ] && printf "source \"%s\"\n" "$bext" >> "$brc"

source "$bext"

printf "Installing nvim-plug...\n"
if [ ! -f ~/.local/share/nvim/site/autoload/plug.vim ]; then
  curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

# nvim configuration
mkdir -p "${HOME}/.config/nvim"
curl -s 'https://raw.githubusercontent.com/seanbreckenridge/dotfiles/master/.config/nvim/init.vim' > "${HOME}/.config/nvim/init.vim"
nvim +PlugInstall +qall

# Setting up default user directories
default_user_dirs=("code" ".local" ".cache" ".credentials")

for d_name in "${default_user_dirs[@]}"; do
  if [[ ! -d "${HOME}/${d_name}" ]]; then
    mkdir -p "${HOME}/${d_name}"
  fi
done


printf "Checking git config...\n"
# check for global name config
if [[ -z $(git config --global user.name) ]]; then
	printf "No global name set. Enter full name: "
	read -r githubusername
	git config --global user.name "$githubusername"
fi

# check for global email config
if [[ -z $(git config --global user.email) ]]; then
	printf "No global email set. Enter email connected to your GitHub account: "
	read -r githubemail
	git config --global user.email "$githubemail"
fi

git config --global core.editor nvim
git config --global push.default simple

[[ -e /usr/local/bin/fzf ]] || sudo ln ~/.local/plugged/fzf/bin/fzf /usr/local/bin/fzf
