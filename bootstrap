#!/usr/bin/env bash

set -e

# function to check if required commands exist prior to bootstrap
require() {
	if [[ ! $(command -v "$1") ]]; then
		echo -e "bootstrapping requires ${1}, Install that and re-run"
		exit 1
	fi
}

require bash
require curl
require git
require printf

mkdir -p "${HOME}/.local/share"

printf "Checking shell...\n"
# check that were using bash
if ! echo "$SHELL" | grep -q bash; then
	printf "Expected to be using bash, found %s\n" "$SHELL"
	printf "Changing shell to bash...\n"
	sudo chsh -s "$(command -v bash)"
fi

# shorthand for the bashrc file
bashrc="${HOME}/.bashrc"
bext="${HOME}/.bootstraprc"

# create bashrc if it doesn't exist
[[ ! -f "$bashrc" ]] && touch "$bashrc"

printf "Creating extension bashrc file at %s\n" "$bext"
cat <<EOF >"$bext"
if command -v nvim >/dev/null; then
	export EDITOR=nvim
	export VISUAL=nvim
else
	export EDITOR=vim
	export VISUAL=vim
fi
export TERM=xterm-256color
export LANG='en_US.UTF-8'
export PS1="[\u@\h \w ] $ "
export HISTTIMEFORMAT="%s "
export HISTFILESIZE=-1
export HISTSIZE=-1
shopt -s histappend  # dont overwrite history
shopt -s cmdhist   # save al-lines of multi-line commands in the same entry
shopt -s lithist  # embedded newlines for multi-line commands

alias ls='ls -h --color=tty'
alias ll='ls -l'
alias la='la -a'
alias l.='ls -a'

alias du='du -h'
alias df='df -h'

R() {
  if command -v ranger >/dev/null; then
    ranger
  else
    python3 -m pip install ranger-fm && ranger
  fi
}

[[ -f "${HOME}/.local/share/git_aliases" ]] && . ~/.local/share/git_aliases 2>/dev/null
[[ -f "${HOME}/.local/share/cdtmp" ]] && . ~/.local/share/cdtmp
[[ -f "${HOME}/.local/share/mkcd" ]] && . ~/.local/share/mkcd

alias path='echo \$PATH | tr ":" "\n"'
alias e='$EDITOR'
alias en='$EDITOR'

nvim_update_config() {
	(cd "${HOME}/.dotfiles" && git pull)
	rsync -Pavh --delete-after "${HOME}/.dotfiles/.config/nvim/" "${HOME}/.config/nvim/"
}

[[ -f "${HOME}/.bash_ext" ]] && . "${HOME}/.bash_ext"
EOF

cat <<EOF >"$HOME/.bash_profile"
# edit ~/.bash_ext instead of this file
source ~/.bashrc
EOF

touch ~/.bash_ext

# add source for bash extensions to bashrc
if ! grep -q "bootstraprc" "$bashrc"; then
	printf "source \"%s\"\n" "$bext" >>"$bashrc"
fi

# nvim configuration
[[ ! -d "${HOME}/.dotfiles" ]] && {
	git clone https://github.com/seanbreckenridge/dotfiles.git "${HOME}/.dotfiles" || true
}
mkdir -p "${HOME}/.config/nvim"
rsync -Pavh "${HOME}/.dotfiles/.config/nvim/" "${HOME}/.config/nvim/"

cp -v "${HOME}/.dotfiles/.config/zsh/aliases/git_aliases" "${HOME}/.local/share/git_aliases"
cp -v "${HOME}/.dotfiles/.config/zsh/functions/cdtmp" "${HOME}/.local/share/cdtmp"
cp -v "${HOME}/.dotfiles/.config/zsh/functions/mkcd" "${HOME}/.local/share/mkcd"

printf 'Build neovim from source? [y/N] '
read -r buildnvim
case "$buildnvim" in
[yY][eE][sS] | [yY])
	# install neovim from source
	bash -c "$(curl -fsSL https://raw.githubusercontent.com/seanbreckenridge/bootstrap/master/build_neovim)"
	;;
*) ;;
esac

# install fzf
[[ ! -d "${HOME}/.fzf" ]] && {
	git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf || true
}
~/.fzf/install
# should ask me if I want to install keybindings

# Setting up default user directories
default_user_dirs=(".local" ".cache" ".credentials")

for d_name in "${default_user_dirs[@]}"; do
	if [[ ! -d "${HOME}/${d_name}" ]]; then
		mkdir -p "${HOME}/${d_name}"
	fi
done

printf "Checking git config...\n"
# check for global name config
if [[ -z "$(git config --global user.name)" ]]; then
	printf "No global name set. Enter full name: "
	read -r githubusername
	git config --global user.name "$githubusername"
fi

# check for global email config
if [[ -z "$(git config --global user.email)" ]]; then
	printf "No global email set. Enter email connected to your GitHub account: "
	read -r githubemail
	git config --global user.email "$githubemail"
fi

git config --global core.editor nvim
git config --global push.default simple
